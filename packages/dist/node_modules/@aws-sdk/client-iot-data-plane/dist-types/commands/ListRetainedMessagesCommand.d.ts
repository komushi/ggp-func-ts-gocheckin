import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { IoTDataPlaneClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../IoTDataPlaneClient";
import { ListRetainedMessagesRequest, ListRetainedMessagesResponse } from "../models/models_0";
export interface ListRetainedMessagesCommandInput extends ListRetainedMessagesRequest {
}
export interface ListRetainedMessagesCommandOutput extends ListRetainedMessagesResponse, __MetadataBearer {
}
/**
 * <p>Lists summary information about the retained messages stored for the account.</p>
 *          <p>This action returns only the topic names of the retained messages. It doesn't
 *       return any message payloads. Although this action doesn't return a message payload,
 *       it can still incur messaging costs.</p>
 *          <p>To get the message payload of a retained message, call
 *       <a href="https://docs.aws.amazon.com/iot/latest/developerguide/API_iotdata_GetRetainedMessage.html">GetRetainedMessage</a>
 *       with the topic name of the retained message.</p>
 *          <p>Requires permission to access the <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiotfleethubfordevicemanagement.html#awsiotfleethubfordevicemanagement-actions-as-permissions">ListRetainedMessages</a> action.</p>
 *          <p>For more information about messaging costs, see <a href="http://aws.amazon.com/iot-core/pricing/#Messaging">Amazon Web Services IoT Core
 *       pricing - Messaging</a>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { IoTDataPlaneClient, ListRetainedMessagesCommand } from "@aws-sdk/client-iot-data-plane"; // ES Modules import
 * // const { IoTDataPlaneClient, ListRetainedMessagesCommand } = require("@aws-sdk/client-iot-data-plane"); // CommonJS import
 * const client = new IoTDataPlaneClient(config);
 * const command = new ListRetainedMessagesCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link ListRetainedMessagesCommandInput} for command's `input` shape.
 * @see {@link ListRetainedMessagesCommandOutput} for command's `response` shape.
 * @see {@link IoTDataPlaneClientResolvedConfig | config} for IoTDataPlaneClient's `config` shape.
 *
 */
export declare class ListRetainedMessagesCommand extends $Command<ListRetainedMessagesCommandInput, ListRetainedMessagesCommandOutput, IoTDataPlaneClientResolvedConfig> {
    readonly input: ListRetainedMessagesCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    constructor(input: ListRetainedMessagesCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: IoTDataPlaneClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListRetainedMessagesCommandInput, ListRetainedMessagesCommandOutput>;
    private serialize;
    private deserialize;
}
