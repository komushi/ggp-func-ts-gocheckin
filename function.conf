conf {
  lambdaLanguage = "NODEJS20_X"
  language = "NODEJS12_X"
  functionName = "ts_handler"
  handlerName = "packages/dist/src/handler.function_handler"
  aliasName = "PROD"
  memorySizeInKb = 131072
  pinned = true
  timeoutInSeconds = 60
  fromCloudSubscriptions = ["gocheckin/"${AWS_IOT_THING_NAME}"/discover_cameras", "gocheckin/"${AWS_IOT_THING_NAME}"/init_db"]
  toCloudSubscriptions = ["gocheckin/dev/"${AWS_IOT_THING_NAME}"/camera_detected", "gocheckin/dev/"${AWS_IOT_THING_NAME}"/scanner_detected", "gocheckin/dev/"${AWS_IOT_THING_NAME}"/reservation_deployed", "gocheckin/dev/"${AWS_IOT_THING_NAME}"/reservation_reset", "gocheckin/dev/"${AWS_IOT_THING_NAME}"/zb_lock_detected", "gocheckin/dev/"${AWS_IOT_THING_NAME}"/zb_lock_removed"]
  inputTopics = ["gocheckin/scanner_detected", "gocheckin/member_detected"]
  outputTopics = ["gocheckin/fetch_cameras", "gocheckin/reset_camera"]
  connectedShadows = [${AWS_IOT_THING_NAME}]
  environmentVariables {
    DDB_HOST_NAME = "localhost"
    DDB_PORT = "8080"
    DDB_PATH = ""
    DDB_PROTOCOL = "http:"
    DDB_ENDPOINT = "http://localhost:8080"
    TBL_HOST = "gocheckin_host"
    TBL_RESERVATION = "gocheckin_reservation"
    TBL_MEMBER = "gocheckin_member"
    TBL_ASSET = "gocheckin_asset"
    IDX_HOST_PROPERTYCODE = "idx_hostPropertyCode"
    IDX_EQUIPMENT_ID = "idx_equipmentId"
    IDX_EQUIPMENT_NAME = "idx_equipmentName"
    TBL_RECORD = "gocheckin_scan_record"
    COL_FACE_IMG_URL = "faceImgUrl"
    COL_MEMBER_NO = "memberNo"
    ZB_CAT = "LOCK,KEYPAD,LOCK_KEYPAD"
    ZB_CAT_WITH_KEYPAD = "KEYPAD,LOCK_KEYPAD"
    KEYPAD = "KEYZB-110,UEHK2AZ0,XHK1-TC,XHK1-UE"
    LOCK = "router_led_trigger_pulse,battery_lock"
    LOCK_KEYPAD = "battery_lock_keypad,wired_lock_keypad"
    
  }
  coreRoleIamManagedPolicies = [
    "arn:aws:iam::aws:policy/AWSIoTDataAccess"
  ]
  greengrassContainer = true
}
